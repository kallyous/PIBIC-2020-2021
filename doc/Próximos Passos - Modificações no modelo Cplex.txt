(FEITO)
#1 Comparar modelo normal/completo contra (5), (6) e (7), (8) e (9), e por fim de (5) a (9) com o lazzy.
Usar esses resultados para saber qual conjunto de restrições tem mais impacto e priorizar essa no callback na hora de fazer o algoritmo.

(NÃO PRECISOU)
# Quando nenhuma versão achar solução ótima no tempo limite, usar o gap como desempate.

(FEITO)
#2 Implementar e compilar versão com callback. Algoritmo falhou em encontrar melhor solução.

(FEITO)
#3 Debugar e refazer algoritmo dentro do callback.

(A FAZER)
#4 Adicionar as outras restrições no callback pra ver no que dá.
  - Trazer a tolerância para cá também.

O que é e pra que server ILONODECALLBACK() ?

#5 Implementar e aplicar callback de escolha de qual variável escolher para criar o próximo ramo.
 - Critério de peso vs distância do valor médio na solução fracionaria.
 - ILOUSERCONSTRAINTCALLBACKn adicionando a restrição mais violada ao invés de adicionar todas.
 - O programa 'iloadmipex1.cpp' tem código de exemplo.
